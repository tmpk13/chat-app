{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/sharedWithVM/chat-app-final/frontend/src/context/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport io from 'socket.io-client';\nimport AuthContext from './AuthContext';\nimport { SOCKET_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    let newSocket;\n    if (isAuthenticated && user) {\n      // Initialize socket connection\n      newSocket = io(SOCKET_URL);\n\n      // Set up event handlers\n      newSocket.on('connect', () => {\n        setConnected(true);\n        console.log('Socket connected:', newSocket.id);\n\n        // Join with user data\n        newSocket.emit('join', {\n          userId: user.id\n        });\n      });\n      newSocket.on('disconnect', () => {\n        setConnected(false);\n        console.log('Socket disconnected');\n      });\n      newSocket.on('error', error => {\n        console.error('Socket error:', error);\n      });\n      setSocket(newSocket);\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, [isAuthenticated, user]);\n\n  // Join a chat room\n  const joinRoom = roomId => {\n    if (socket && connected) {\n      socket.emit('joinRoom', roomId);\n    }\n  };\n\n  // Leave a chat room\n  const leaveRoom = roomId => {\n    if (socket && connected) {\n      socket.emit('leaveRoom', roomId);\n    }\n  };\n\n  // Send a message\n  const sendMessage = (roomId, message) => {\n    if (socket && connected && user) {\n      socket.emit('sendMessage', {\n        roomId,\n        message,\n        sender: user.id\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      connected,\n      joinRoom,\n      leaveRoom,\n      sendMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"V+DKBH8EfB8G0MhaXXB2hegRKdU=\");\n_c = SocketProvider;\nexport default SocketContext;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","io","AuthContext","SOCKET_URL","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","connected","setConnected","isAuthenticated","user","newSocket","on","console","log","id","emit","userId","error","disconnect","joinRoom","roomId","leaveRoom","sendMessage","message","sender","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Desktop/sharedWithVM/chat-app-final/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport io from 'socket.io-client';\nimport AuthContext from './AuthContext';\nimport { SOCKET_URL } from '../config';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { isAuthenticated, user } = useContext(AuthContext);\n\n  useEffect(() => {\n    let newSocket;\n\n    if (isAuthenticated && user) {\n      // Initialize socket connection\n      newSocket = io(SOCKET_URL);\n\n      // Set up event handlers\n      newSocket.on('connect', () => {\n        setConnected(true);\n        console.log('Socket connected:', newSocket.id);\n        \n        // Join with user data\n        newSocket.emit('join', { userId: user.id });\n      });\n\n      newSocket.on('disconnect', () => {\n        setConnected(false);\n        console.log('Socket disconnected');\n      });\n\n      newSocket.on('error', (error) => {\n        console.error('Socket error:', error);\n      });\n\n      setSocket(newSocket);\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, [isAuthenticated, user]);\n\n  // Join a chat room\n  const joinRoom = (roomId) => {\n    if (socket && connected) {\n      socket.emit('joinRoom', roomId);\n    }\n  };\n\n  // Leave a chat room\n  const leaveRoom = (roomId) => {\n    if (socket && connected) {\n      socket.emit('leaveRoom', roomId);\n    }\n  };\n\n  // Send a message\n  const sendMessage = (roomId, message) => {\n    if (socket && connected && user) {\n      socket.emit('sendMessage', {\n        roomId,\n        message,\n        sender: user.id\n      });\n    }\n  };\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n        connected,\n        joinRoom,\n        leaveRoom,\n        sendMessage\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport default SocketContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}