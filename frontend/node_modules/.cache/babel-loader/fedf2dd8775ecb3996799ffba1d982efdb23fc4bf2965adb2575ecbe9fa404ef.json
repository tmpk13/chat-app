{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/sharedWithVM/chat-app-final/frontend/src/pages/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\nimport SocketContext from '../context/SocketContext';\nimport ChatMessage from '../components/ChatMessage';\nimport { API_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const {\n    id: roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user,\n    setError\n  } = useContext(AuthContext);\n  const {\n    socket,\n    connected,\n    joinRoom,\n    leaveRoom,\n    sendMessage\n  } = useContext(SocketContext);\n  const [room, setRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  // Fetch chat room details and messages\n  useEffect(() => {\n    const fetchRoomAndMessages = async () => {\n      try {\n        // Get room details\n        const roomRes = await axios.get(`${API_URL}/api/chatrooms/${roomId}`);\n        setRoom(roomRes.data);\n\n        // Get messages\n        const messagesRes = await axios.get(`${API_URL}/api/chatrooms/${roomId}/messages`);\n        setMessages(messagesRes.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Could not fetch chat room data');\n        navigate('/');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRoomAndMessages();\n  }, [roomId, navigate, setError]);\n\n  // Join the room when component mounts\n  useEffect(() => {\n    if (connected && roomId) {\n      joinRoom(roomId);\n    }\n\n    // Leave the room when component unmounts\n    return () => {\n      if (connected && roomId) {\n        leaveRoom(roomId);\n      }\n    };\n  }, [connected, roomId, joinRoom, leaveRoom]);\n\n  // Listen for new messages\n  useEffect(() => {\n    if (socket) {\n      const handleNewMessage = message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      socket.on('newMessage', handleNewMessage);\n      return () => {\n        socket.off('newMessage', handleNewMessage);\n      };\n    }\n  }, [socket]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle sending a new message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    sendMessage(roomId, newMessage);\n    setNewMessage('');\n  };\n\n  // Handle leaving the chat room\n  const handleLeaveRoom = async () => {\n    try {\n      await axios.post(`${API_URL}/api/chatrooms/${roomId}/leave`);\n      navigate('/');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Could not leave chat room');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading chat room...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: room.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleLeaveRoom,\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-messages\",\n        children: \"No messages yet. Start the conversation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message,\n        currentUserId: user.id\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"m8b1a0MgRN/OyPdJ4eMiRwiXjmw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useParams","useNavigate","axios","AuthContext","SocketContext","ChatMessage","API_URL","jsxDEV","_jsxDEV","ChatRoom","_s","id","roomId","navigate","user","setError","socket","connected","joinRoom","leaveRoom","sendMessage","room","setRoom","messages","setMessages","newMessage","setNewMessage","loading","setLoading","messagesEndRef","fetchRoomAndMessages","roomRes","get","data","messagesRes","error","_error$response","_error$response$data","response","message","handleNewMessage","prevMessages","on","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","handleLeaveRoom","post","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","length","map","currentUserId","_id","ref","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/user/Desktop/sharedWithVM/chat-app-final/frontend/src/pages/ChatRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\nimport SocketContext from '../context/SocketContext';\nimport ChatMessage from '../components/ChatMessage';\nimport { API_URL } from '../config';\n\nconst ChatRoom = () => {\n  const { id: roomId } = useParams();\n  const navigate = useNavigate();\n  const { user, setError } = useContext(AuthContext);\n  const { socket, connected, joinRoom, leaveRoom, sendMessage } = useContext(SocketContext);\n  \n  const [room, setRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  \n  const messagesEndRef = useRef(null);\n\n  // Fetch chat room details and messages\n  useEffect(() => {\n    const fetchRoomAndMessages = async () => {\n      try {\n        // Get room details\n        const roomRes = await axios.get(`${API_URL}/api/chatrooms/${roomId}`);\n        setRoom(roomRes.data);\n        \n        // Get messages\n        const messagesRes = await axios.get(`${API_URL}/api/chatrooms/${roomId}/messages`);\n        setMessages(messagesRes.data);\n      } catch (error) {\n        setError(error.response?.data?.message || 'Could not fetch chat room data');\n        navigate('/');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRoomAndMessages();\n  }, [roomId, navigate, setError]);\n\n  // Join the room when component mounts\n  useEffect(() => {\n    if (connected && roomId) {\n      joinRoom(roomId);\n    }\n    \n    // Leave the room when component unmounts\n    return () => {\n      if (connected && roomId) {\n        leaveRoom(roomId);\n      }\n    };\n  }, [connected, roomId, joinRoom, leaveRoom]);\n\n  // Listen for new messages\n  useEffect(() => {\n    if (socket) {\n      const handleNewMessage = (message) => {\n        setMessages((prevMessages) => [...prevMessages, message]);\n      };\n      \n      socket.on('newMessage', handleNewMessage);\n      \n      return () => {\n        socket.off('newMessage', handleNewMessage);\n      };\n    }\n  }, [socket]);\n  \n  // Scroll to bottom when messages change\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Handle sending a new message\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    \n    sendMessage(roomId, newMessage);\n    setNewMessage('');\n  };\n  \n  // Handle leaving the chat room\n  const handleLeaveRoom = async () => {\n    try {\n      await axios.post(`${API_URL}/api/chatrooms/${roomId}/leave`);\n      navigate('/');\n    } catch (error) {\n      setError(error.response?.data?.message || 'Could not leave chat room');\n    }\n  };\n  \n  if (loading) {\n    return <div className=\"loading\">Loading chat room...</div>;\n  }\n  \n  return (\n    <div className=\"chat-room-container\">\n      <div className=\"chat-room-header\">\n        <h1>{room.name}</h1>\n        <button className=\"btn btn-secondary\" onClick={handleLeaveRoom}>\n          Leave Room\n        </button>\n      </div>\n      \n      <div className=\"messages-container\">\n        {messages.length === 0 ? (\n          <p className=\"no-messages\">No messages yet. Start the conversation!</p>\n        ) : (\n          messages.map((message) => (\n            <ChatMessage \n              key={message._id} \n              message={message} \n              currentUserId={user.id} \n            />\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <form className=\"message-form\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          className=\"message-input\"\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatRoom;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACtE,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,EAAE,EAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAClC,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa,IAAI;IAAEC;EAAS,CAAC,GAAGnB,UAAU,CAACO,WAAW,CAAC;EAClD,MAAM;IAAEa,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAGxB,UAAU,CAACQ,aAAa,CAAC;EAEzF,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM+B,cAAc,GAAG9B,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMiC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF;QACA,MAAMC,OAAO,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,GAAG1B,OAAO,kBAAkBM,MAAM,EAAE,CAAC;QACrEU,OAAO,CAACS,OAAO,CAACE,IAAI,CAAC;;QAErB;QACA,MAAMC,WAAW,GAAG,MAAMhC,KAAK,CAAC8B,GAAG,CAAC,GAAG1B,OAAO,kBAAkBM,MAAM,WAAW,CAAC;QAClFY,WAAW,CAACU,WAAW,CAACD,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,oBAAA;QACdtB,QAAQ,CAAC,EAAAqB,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBH,IAAI,cAAAI,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,gCAAgC,CAAC;QAC3E1B,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,SAAS;QACRe,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDE,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAAClB,MAAM,EAAEC,QAAQ,EAAEE,QAAQ,CAAC,CAAC;;EAEhC;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIoB,SAAS,IAAIL,MAAM,EAAE;MACvBM,QAAQ,CAACN,MAAM,CAAC;IAClB;;IAEA;IACA,OAAO,MAAM;MACX,IAAIK,SAAS,IAAIL,MAAM,EAAE;QACvBO,SAAS,CAACP,MAAM,CAAC;MACnB;IACF,CAAC;EACH,CAAC,EAAE,CAACK,SAAS,EAAEL,MAAM,EAAEM,QAAQ,EAAEC,SAAS,CAAC,CAAC;;EAE5C;EACAtB,SAAS,CAAC,MAAM;IACd,IAAImB,MAAM,EAAE;MACV,MAAMwB,gBAAgB,GAAID,OAAO,IAAK;QACpCf,WAAW,CAAEiB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,OAAO,CAAC,CAAC;MAC3D,CAAC;MAEDvB,MAAM,CAAC0B,EAAE,CAAC,YAAY,EAAEF,gBAAgB,CAAC;MAEzC,OAAO,MAAM;QACXxB,MAAM,CAAC2B,GAAG,CAAC,YAAY,EAAEH,gBAAgB,CAAC;MAC5C,CAAC;IACH;EACF,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;;EAEZ;EACAnB,SAAS,CAAC,MAAM;IAAA,IAAA+C,qBAAA;IACd,CAAAA,qBAAA,GAAAf,cAAc,CAACgB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACxB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMyB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACzB,UAAU,CAAC0B,IAAI,CAAC,CAAC,EAAE;IAExB/B,WAAW,CAACR,MAAM,EAAEa,UAAU,CAAC;IAC/BC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAM0B,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMlD,KAAK,CAACmD,IAAI,CAAC,GAAG/C,OAAO,kBAAkBM,MAAM,QAAQ,CAAC;MAC5DC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOsB,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA;MACdxC,QAAQ,CAAC,EAAAuC,gBAAA,GAAAnB,KAAK,CAACG,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrB,IAAI,cAAAsB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,2BAA2B,CAAC;IACxE;EACF,CAAC;EAED,IAAIZ,OAAO,EAAE;IACX,oBAAOnB,OAAA;MAAKgD,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5D;EAEA,oBACErD,OAAA;IAAKgD,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjD,OAAA;MAAKgD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BjD,OAAA;QAAAiD,QAAA,EAAKpC,IAAI,CAACyC;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBrD,OAAA;QAAQgD,SAAS,EAAC,mBAAmB;QAACO,OAAO,EAAEX,eAAgB;QAAAK,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrD,OAAA;MAAKgD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChClC,QAAQ,CAACyC,MAAM,KAAK,CAAC,gBACpBxD,OAAA;QAAGgD,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEvEtC,QAAQ,CAAC0C,GAAG,CAAE1B,OAAO,iBACnB/B,OAAA,CAACH,WAAW;QAEVkC,OAAO,EAAEA,OAAQ;QACjB2B,aAAa,EAAEpD,IAAI,CAACH;MAAG,GAFlB4B,OAAO,CAAC4B,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACF,CACF,eACDrD,OAAA;QAAK4D,GAAG,EAAEvC;MAAe;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENrD,OAAA;MAAMgD,SAAS,EAAC,cAAc;MAACa,QAAQ,EAAErB,iBAAkB;MAAAS,QAAA,gBACzDjD,OAAA;QACE8D,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE/C,UAAW;QAClBgD,QAAQ,EAAGxB,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;QAC/ChB,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFrD,OAAA;QAAQ8D,IAAI,EAAC,QAAQ;QAACd,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnD,EAAA,CAhIID,QAAQ;EAAA,QACWT,SAAS,EACfC,WAAW;AAAA;AAAA0E,EAAA,GAFxBlE,QAAQ;AAkId,eAAeA,QAAQ;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}